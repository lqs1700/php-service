1.设计模式是一套被反复使用、容易被他人理解的、可靠的代码设计经验的总结

2.架构、框架和设计模式有什么关系呢？
架构是一套体系结构，是项目的整体解决方案；
框架是可供复用的半成品软件，是具体程序代码。架构一般会涉及到采用什么样的框架来加速和优化某部分问题的解决，而好的框架代码里合理使用了很多设计模式。

3.提炼设计模式的几个原则：
开闭原则：模块应对扩展开放，而对修改关闭。
里氏代换原则：如果调用的是父类的话，那么换成子类也完全可以运行。
依赖倒转原则：抽象不依赖细节，面向接口编程，传递参数尽量引用层次高的类。
接口隔离原则：每一个接口只负责一种角色。
合成/聚合复用原则：要尽量使用合成/聚合，不要滥用继承。

4.设计模式的功用？
设计模式能解决
替换杂乱无章的代码，形成良好的代码风格
代码易读，工程师们都能很容易理解
增加新功能时不用修改接口，可扩展性强
稳定性好，一般不会出现未知的问题

5.设计模式分类
   创建型模式：
单例模式、工厂模式（简单工厂、工厂方法、抽象工厂）、创建者模式、原型模式。
   结构型模式：
适配器模式、桥接模式、装饰模式、组合模式、外观模式、享元模式、代理模式。
 	 行为型模式：
模版方法模式、命令模式、迭代器模式、观察者模式、中介者模式、备忘录模式、解释器模式、状态模式、策略模式、职责链模式、访问者模式。
